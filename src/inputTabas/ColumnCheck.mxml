<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="200" height="250" 
		 creationComplete="group1_creationCompleteHandler(event)"
	     xmlns:srv="services.Base1.*" >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			import services.base1.Base1;
			
			import spark.layouts.ColumnAlign;
			
			public static const UNCHECKED:String = 'unchecked';
			public static const CHECKED:String = 'checked';
			
			//reference to server object
			public var srv:Base1;
			//data provider (label, data, active)
			[Bindable]
			private var selectionList:ArrayCollection;
			
			//the count of checked elements
			private var checkedCount:uint;
			public function get count():uint
			{
				return checkedCount;
			}
			
			//the text of lblName
			public var labelText:String;
			
			//collect checked data
			public function get dataList():ArrayCollection
			{
				var res:ArrayCollection = new ArrayCollection();
				
				var i:uint;
				for (i = 0; i < selectionList.length; i++)
					if (selectionList[i].active)
						res.addItem({data:selectionList[i].data});
				
				return res;
			}
			
			//assign new data
			public function set dataList(data:ArrayCollection):void
			{
				selectionList = data;
			}
			
			//load data
			public function load(query:String = null):void
			{
				crData.token = srv.getCountryList();
			}
			
			//reset
			public function reset():void
			{
				var i:uint;
				for (i=0; i<selectionList.length; i++)
					selectionList[i].active = false;
				
				dgrData.dataProvider = selectionList;
			}

			//events
			//when the component is created, set label name
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				lblName.text = labelText;
				checkedCount = 0;
				
				addEventListener(CheckBoxRenderer.INCR_COUNT, onIncrValue);
				addEventListener(CheckBoxRenderer.DECR_COUNT, onDecrValue);
			}
			
			//increment number of checked elements
			private function onIncrValue(e:Event):void
			{
				checkedCount++;
				
				if (checkedCount == 1)
					dispatchEvent(new Event(ColumnCheck.CHECKED, true));
			}
			
			//decrement number of checked elements
			private function onDecrValue(e:Event):void
			{
				checkedCount--;
				
				if (checkedCount == 0)
					dispatchEvent(new Event(ColumnCheck.UNCHECKED, true));
			}

			//when the link button is clicked, select all checkboxes
			protected function lnkAll_clickHandler(event:MouseEvent):void
			{
				var i:uint;
				for (i=0; i<selectionList.length; i++)
					selectionList[i].active = !selectionList[i].active;
				
				checkedCount = selectionList.length;				
				dgrData.dataProvider = selectionList;
				
				dispatchEvent(new Event(ColumnCheck.CHECKED, true));				
			}
			
			//when the data are loaded
			protected function onLoadData(e:ResultEvent):void	{
				selectionList = new ArrayCollection();
				var res:ArrayCollection = crData.lastResult as ArrayCollection;
				if (res.length > 0) {
					for (var i:int = 0; i < res.length; i++) {				
							selectionList.addItem({
								namen:res[i].namen, id:res[i].id, active:false
							});
					}	
				}
			}
				
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:CallResponder id="crData" result="onLoadData(event)"/>
	</fx:Declarations>
	
	<!-- the panel of labels -->
	<s:HGroup height="10%" top="0" left="0" right="0" verticalAlign="middle">
		<s:Label text="Label" width="50%" fontWeight="bold" fontSize="12" id="lblName"/>
		<mx:LinkButton label="Inverse" width="50%" textAlign="right" id="lnkAll" 
					   click="lnkAll_clickHandler(event)" color="#1A69D5" fontWeight="bold"/>
	</s:HGroup>
	
	<!--datagrid -->
	<mx:DataGrid bottom="0" left="0" right="0" height="90%" showHeaders="false" id="dgrData"
				 dataProvider="{selectionList}" textAlign="center">
		<mx:columns>
			<mx:DataGridColumn dataField="namen" resizable="false" width="150"/>
			<mx:DataGridColumn dataField="active" resizable="false" width="90"
							   itemRenderer="inputTabas.CheckBoxRenderer"/>
		</mx:columns>
	</mx:DataGrid>
</s:Group>
