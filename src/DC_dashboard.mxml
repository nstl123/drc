<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" 
			   xmlns:base="services.base.*"			  			    
			   creationComplete="main_start(event)"
			   
			   xmlns:outputTab1="outputTab1.*"
			   xmlns:inputTabas="inputTabas.*"
			   xmlns:inputTab2 = "inputTabas.inputTab2"
			   xmlns:base3="services.base3.*">
	
	<fx:Style source="stilistika.css"/>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import utils.*;

			protected function main_start(event:FlexEvent):void
			{				
				this.workingScenarioID = this.genWorkingScenarioID();	
				this.test3.setScenarioID(this.workingScenarioID);
				
				// need to delete all scenarios which are older then 20 mins form DB
				// for this reason, need a separate table for scenario IDs saving with timestamp 
				
				createNewWorkingScenarioResult.token = base3.createNewWorkingScenario(this.workingScenarioID);
			}
			
			protected var isInitialized:Boolean = false; 
			
			private var workingScenarioID:int = -1;		
			
			private function genWorkingScenarioID():int {
				// here should go scenarioID generator call in utils for unique id
				var z:Number = IDgenerator.generateID();
				this.workingScenarioID = z;
				// this.workingScenarioID = z
				return this.workingScenarioID;
			}
			
			protected function tabNavigator_change(event:Event):void
			{
				if (!this.isInitialized) {
					/* this task is done on 1st tab creationComplete event() */
					/*if (this.inputTabai.selectedIndex == 0) {
						this.inpTab.startApp(event);
					}
					else*/ 
					if (this.inputTabai.selectedIndex == 2) {
						this.outTab1.startApp(new FlexEvent("start"));
						this.isInitialized = true;
						this.outTab1.setScenarioID(this.workingScenarioID);
					} else if (this.inputTabai.selectedIndex == 1) {
						this.someTab.startApp(new FlexEvent("start"));
					}
				}
			}

			protected function createNewWorkingScenarioResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>
	

	<fx:Declarations>		
		<mx:CurrencyFormatter   id="stilius1" precision="4"
								rounding="none"
								decimalSeparatorTo="."
								thousandsSeparatorTo=","
								useThousandsSeparator="true"
								currencySymbol=""
								useNegativeSign="true" />	
	</fx:Declarations>
		
	<fx:Declarations>
		<base3:Base3 id="base3" fault="Alert.show(event.fault.faultString + '\n' + 
					 event.fault.faultDetail)" showBusyCursor="true"/>   	
			
		<s:CallResponder id="createNewWorkingScenarioResult" result="createNewWorkingScenarioResult_resultHandler(event)"/>
	</fx:Declarations>	
	<mx:TabNavigator id="inputTabai" width="99%" height="98%" horizontalCenter="0" verticalCenter="0" 
					 change="tabNavigator_change(event)">
		<!-- <s:NavigatorContent label="InputTabs" width="100%" height="80%" creationComplete="{this.inpTab.startApp(event)}" >												
			 <inputTabas:inputTabas id="inpTab">			 
			 </inputTabas:inputTabas> 		
		</s:NavigatorContent> !-->		
		
		<s:NavigatorContent label="input scenario" width="100%" height="100%" >
			<inputTabas:inputTab2 id="test3">				
			</inputTabas:inputTab2>
		</s:NavigatorContent>
		
		<s:NavigatorContent label="test_view" width="100%" height="100%">
			<inputTabas:inputTabas id="someTab" >				
			</inputTabas:inputTabas>
		</s:NavigatorContent>
		
		<s:NavigatorContent label="outputTab_1" width="100%" height="100%">
			<outputTab1:outputTab1 id="outTab1">				
			</outputTab1:outputTab1>
		</s:NavigatorContent>
	
	</mx:TabNavigator>	
	<s:Label text="experiments with connection. v. 0.1" right="10" top="10"/>
</s:Application>
