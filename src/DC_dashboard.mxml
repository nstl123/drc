<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:panelTabA="panelTabA.*" 
			   xmlns:depot1="services.depot1.*"
			   creationComplete="startApp(event)" 
			   xmlns:panelTabB2="panelTabB2.*" 
			   xmlns:panelTabC3="panelTabC3.*" 
			   xmlns:depot3="services.depot3.*" 
			   xmlns:panelTab0="panelTab0.*" 
			   xmlns:panelTabs="panelTabs.*">
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>
	<fx:Declarations>	
		
		<depot1:Depot1 id="depot1" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" 
					   showBusyCursor="true"/>		
		<depot3:Depot3 id="depot3" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		
		<s:CallResponder id="createNewWorkingScenarioResult" result="createNewWorkingScenarioResult_resultHandler(event)"
						 fault="createNewWorkingScenarioResult_faultHandler(event)"/>		
		<s:CallResponder id="deleteAllScenariosResult" result="deleteAllScenariosResult_resultHandler(event)"/>
		
	</fx:Declarations>
	
		<fx:Script>
		<![CDATA[		
			import controls.FlowManager;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import services.depot1.*;
			import services.depot21.Depot21;
			
			import utils.IDgenerator;			
			private var dataServiceNames:Depot1;
			private var dataServiceData:Depot21;
			private var dataServiceUpdate:Depot3;
			
			private var masterTab:FlowManager;			
			private var workingScenarioID:int;			
			protected var IDgen:IDgenerator = new IDgenerator();
			
			protected function startApp(event:FlexEvent):void
			{
				this.dataServiceNames = new Depot1();
				this.dataServiceData = new Depot21();
				this.dataServiceUpdate = new Depot3();
				trace("init Depot1, Depot21");
				
				this.workingScenarioID = this.IDgen.generateID();			
				cleanOldScenarios(); // this should be removed later				
				this.addEventListener("dbCleaned", initScenarioDB);
				
				this.addEventListener("CNTRY_CHANGED", digestUpdate);			
				//this.addEventListener("scenarioCreated", proceedFurther);
				
				masterTab = new FlowManager();
				//masterTab.addTab(this.panelTest1);
				/*masterTab.addTab(this.panelTest2);
				masterTab.addTab(this.panelTest3);*/				
			}		

			public function digestUpdate(event:Event):void {				
				this.masterTab.manageUpdate(event.target.className);
			}

			public function cleanOldScenarios():void {
				this.statusLabel.text = "cleaning DB...";
				deleteAllScenariosResult.token = depot3.deleteAllScenarios();		
			}
			
			public function initScenarioDB(evt:Event):void {
				createNewWorkingScenarioResult.token = depot3.createNewWorkingScenario(this.workingScenarioID);
			}		
			
			[bindable] private var scenarioCreatedFlag:Boolean = false;
			protected function createNewWorkingScenarioResult_resultHandler(event:ResultEvent):void
			{ 
				scenarioCreatedFlag = true;	
				dispatchEvent(new Event("scenarioCreated", true));
				this.statusLabel.text = "new scenario created"
			}		

			protected function createNewWorkingScenarioResult_faultHandler(event:FaultEvent):void
			{ 
				scenarioCreatedFlag = false;	
				dispatchEvent(new Event("scenarioCreationFailed", true));
				this.statusLabel.text = "new scenario not created"
			}	
			
			protected function tabb11_creationCompleteHandler(event:FlexEvent):void
			{
				trace("creation complete of tab B1");
				this.panelTabB3.setWorkingScenario(this.workingScenarioID);								
				this.panelTabB3.dataServiceNames = this.dataServiceNames;
				this.panelTabB3.dataServiceData = this.dataServiceData;
				this.panelTabB3.initNames();	
				
				this.masterTab.addTab(this.panelTabB3);
			}

			protected function tabc11_creationCompleteHandler(event:FlexEvent):void
			{
				trace("creation complete of tab C1");
				this.panelTabC4.setWorkingScenario(this.workingScenarioID);
				this.panelTabC4.dataServiceData = this.dataServiceData;				
				this.panelTabC4.dataServiceNames = this.dataServiceNames;				
				this.panelTabC4.initNames();
				
				this.masterTab.addTab(this.panelTabC4);
			}

			protected function tabd11_creationCompleteHandler(event:FlexEvent):void
			{
				trace("creation complete of tab D1");
				this.panelTabD5.setWorkingScenario(this.workingScenarioID);				
				this.panelTabD5.dataServiceNames = this.dataServiceNames;
				this.panelTabD5.dataServiceData = this.dataServiceData;
				this.panelTabD5.initNames();				
				
				this.masterTab.addTab(this.panelTabD5);
			}

			protected function tabe11_creationCompleteHandler(event:FlexEvent):void
			{
				trace("creation complete of tab E6");
				this.panelTabE6.setWorkingScenario(this.workingScenarioID);				
				this.panelTabE6.dataServiceNames = this.dataServiceNames;
				this.panelTabE6.dataServiceData = this.dataServiceData;
				this.panelTabE6.initNames();
				
				this.masterTab.addTab(this.panelTabE6);
			}			
			
			protected function deleteAllScenariosResult_resultHandler(event:ResultEvent):void
			{
			     this.statusLabel.text = "data cleaned from DB";
				 this.dispatchEvent(new Event("dbCleaned"));
				 
			}

			protected function taba11_creationCompleteHandler(event:FlexEvent):void
			{
				trace("creation complete of tab initTab");
				this.panelTabA2.setWorkingScenario(this.workingScenarioID);
				
				this.panelTabA2.dataServiceNames = this.dataServiceNames;
				this.panelTabA2.dataServiceData =  this.dataServiceData;
				this.panelTabA2.dataServiceUpdate = this.dataServiceUpdate;
				this.panelTabA2.initNames();
				
				this.masterTab.addTab(this.panelTabA2);
			}

		]]>
	</fx:Script>
		
	<s:BorderContainer width="100%" height="100%" horizontalCenter="0" verticalCenter="0">	
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<s:Label x="115" y="0" text="empty" id="statusLabel" width="100%" textAlign="right"/>
		<mx:TabNavigator width="100%" height="100%">

			<s:NavigatorContent label="Path selection" width="100%" height="100%">
				<panelTabs:tabPathSelection x="10" y="10">
				</panelTabs:tabPathSelection>
			</s:NavigatorContent>
			<s:NavigatorContent label="MacroIndicators (A1 + A2)" width="100%" height="100%">
				<panelTabs:tabA2 id="panelTabA2" horizontalCenter="0" verticalCenter="0" width="100%" height="100%"
								 creationComplete="taba11_creationCompleteHandler(event)" >
				</panelTabs:tabA2>
			</s:NavigatorContent>
			<s:NavigatorContent label="B. Factors" width="100%" height="100%">
				<panelTabs:tabB3 id="panelTabB3" horizontalCenter="0" verticalCenter="0" width="100%" height="100%"
								 creationComplete="tabb11_creationCompleteHandler(event)" >					
				</panelTabs:tabB3>
				
			</s:NavigatorContent>
			<s:NavigatorContent label="C. Device Base" width="100%" height="100%">
				<panelTabs:tabC4 id = "panelTabC4" width="100%" height="100%" 
								 creationComplete="tabc11_creationCompleteHandler(event)">					
				</panelTabs:tabC4>
			</s:NavigatorContent>
			<s:NavigatorContent label="D. Market Size" width="100%" height="100%">
				<panelTabs:tabD5 id="panelTabD5" creationComplete="tabd11_creationCompleteHandler(event)"
								  enabled="false">					
				</panelTabs:tabD5>
			</s:NavigatorContent>
			<s:NavigatorContent label="E. Demand" width="100%" height="100%">
				<panelTabs:tabE6 id="panelTabE6" creationComplete="tabe11_creationCompleteHandler(event)">					
				</panelTabs:tabE6>
			</s:NavigatorContent>			
			
		</mx:TabNavigator>		
	</s:BorderContainer>
</s:Application>
