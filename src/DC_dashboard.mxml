<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:panelTabA="panelTabA.*" 
			   xmlns:depot1="services.depot1.*"
			   creationComplete="startApp(event)" 
			   xmlns:panelTabB="panelTabB.*" 
			   xmlns:panelTabC="panelTabC.*" 
			   xmlns:depot3="services.depot3.*" 
			   xmlns:panelTab0="panelTab0.*" xmlns:panelTabs="panelTabs.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>	
		
		<depot1:Depot1 id="depot1" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" 
					   showBusyCursor="true"/>
		<s:CallResponder id="createNewWorkingScenarioResult" result="createNewWorkingScenarioResult_resultHandler(event)"
						  fault="createNewWorkingScenarioResult_faultHandler(event)"/>
		<depot3:Depot3 id="depot3" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		
	</fx:Declarations>
	
		<fx:Script>
		<![CDATA[		
			import controls.FlowManager;			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import services.depot1.*;			
			import utils.IDgenerator;			
			private var dataService:Depot1;			
			private var masterTab:FlowManager;			
			private var workingScenarioID:int;			
			protected var IDgen:IDgenerator = new IDgenerator();
			
			protected function startApp(event:FlexEvent):void
			{
				dataService = new Depot1();
				trace("init Depot1");
				
				this.workingScenarioID = this.IDgen.generateID();				
				initScenarioDB(this.workingScenarioID);
				
				this.addEventListener("CNTRY_CHANGED", digestUpdate);			
				//this.addEventListener("scenarioCreated", proceedFurther);
				
				masterTab = new FlowManager();
				masterTab.addTab(this.panelTest1);
				/*masterTab.addTab(this.panelTest2);
				masterTab.addTab(this.panelTest3);*/				
			}		

			public function digestUpdate(event:Event):void {				
				this.masterTab.manageUpdate(event.target.className);
			}
			
			public function initScenarioDB(scenarioID:int):void {
				createNewWorkingScenarioResult.token = depot3.createNewWorkingScenario(this.workingScenarioID);
			}		
			
			[bindable] private var scenarioCreatedFlag:Boolean = false;
			protected function createNewWorkingScenarioResult_resultHandler(event:ResultEvent):void
			{ 
				scenarioCreatedFlag = true;	
				dispatchEvent(new Event("scenarioCreated", true));
			}		

			protected function createNewWorkingScenarioResult_faultHandler(event:FaultEvent):void
			{
				this.panelTest1.flagTextA = "data error";
			}

			protected function panelTest1_creationCompleteHandler(event:FlexEvent):void
			{
				this.panelTest1.flagTextA = "no data yet";
				this.panelTest1.setWorkingScenario(this.workingScenarioID);
				this.panelTest1.dataService = this.dataService;
			}			

		]]>
	</fx:Script>
		
	<s:BorderContainer width="100%" height="100%" horizontalCenter="0" verticalCenter="0">	
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		
		<mx:TabNavigator width="100%" height="100%">

			<s:NavigatorContent label="Path selection" width="100%" height="100%">
				<panelTabs:tabPathSelection x="10" y="10">
				</panelTabs:tabPathSelection>
			</s:NavigatorContent>
			<s:NavigatorContent label="MacroIndicators (A1 + A2)" width="100%" height="100%">
			</s:NavigatorContent>
			<s:NavigatorContent label="B. Factors" width="100%" height="100%">
			</s:NavigatorContent>
			<s:NavigatorContent label="C. Device Base" width="100%" height="100%">
			</s:NavigatorContent>
			<s:NavigatorContent label="D. Market Size" width="100%" height="100%">
			</s:NavigatorContent>
			<s:NavigatorContent label="E. Demand" width="100%" height="100%">
			</s:NavigatorContent>
			
			<s:NavigatorContent label="Tab1" width="100%" height="100%">
				<panelTabs:tabA1 id="panelTest1" width="100%" height="100%" top="0"
								 creationComplete="panelTest1_creationCompleteHandler(event)">					
				</panelTabs:tabA1>
			</s:NavigatorContent>			
			
		</mx:TabNavigator>		
	</s:BorderContainer>
</s:Application>
