<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:outputTab1="outputTab1.*" 
		 width="100%" height="100%"
		 xmlns:base="services.base.*"  
		>
	
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>

	<!-- for data efficiency, 
	
		 get all data at initial stage & store it locally,
	 	 then just query with selections; query time awfull for aggregated demand!!
		
		 however, for demand split, use query instead.
	!-->
	
	<fx:Declarations>
		<s:RadioButtonGroup id="batTypes"/>
		<s:RadioButtonGroup id="pwrSource"/>		
		
		<base:Base id="base" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"			    
				   showBusyCursor="true"  />
		
		<s:CallResponder id="getCountriesList" result="cntryList_resultHandler(event)"/>
		<s:CallResponder id="getIndicatorNamesResult" result="getIndicatorNamesResult_resultHandler(event)"/>
		<s:CallResponder id="getOutputDataResult" result="getOutputDataResult_resultHandler(event)"/>
		
	</fx:Declarations>
	
	<fx:Declarations>		
		<mx:CurrencyFormatter   id="stilius2" precision="2"
								rounding="nearest"
								decimalSeparatorTo="."
								thousandsSeparatorTo=","
								useThousandsSeparator="true"
								currencySymbol=""
								useNegativeSign="true"                  
								/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.events.ResultEvent;
			
			[bindable] public var selectedCntry:int = 1;
			[bindable] public var selectedIndi:int = 1;
			[bindable] public var selectedDevice:int = 1;
			[bindable] public var selectedBatType:int = 1;
			[bindable] public var selectedPwrType:int = 1;			
			
			[bindable] private var workingScenarioID:int = 0;
			
			public function setScenarioID(id:int):void {
				this.workingScenarioID = id;
			}
			
			public function getScenarioID():int {
				return this.workingScenarioID;
			} 
			
			public function startApp(event:FlexEvent):void
			{				
				this.getCountriesList.token = this.base.getCountryList();
				this.getIndicatorNamesResult.token = base.getIndicatorNames(1, 1);
				
				this.addEventListener("cntrySelectionChanged", refreshData);
				// this.addEventListener("typesSelectionChanged", refreshDemandData);		
				this.addEventListener("indiSelectionChanged",  refreshData);
			}
			
			protected function refreshData(evt:Event):void {
				// getSomeDataAtCountryLevel()
			}
			
			protected function cntryList_resultHandler(event:ResultEvent):void
			{
				var rez:ArrayCollection = new ArrayCollection();
				rez = ArrayCollection(this.getCountriesList.lastResult);
				cntryGrid.dataProvider = rez;
			}
			
			protected function getIndicatorNamesResult_resultHandler(event:ResultEvent):void
			{
				var rez:ArrayCollection = new ArrayCollection();
				rez = ArrayCollection(this.getIndicatorNamesResult.lastResult);
				indiGrid.dataProvider = rez;
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				selectedBatType = int(this.batTypes.selectedValue);
				selectedPwrType = int(this.pwrSource.selectedValue);
			}
			
			protected function batTypesChange_clickHandler(event:MouseEvent):void
			{
				selectedBatType = int(this.batTypes.selectedValue);
				this.dispatchEvent(new Event("typesSelectionChanged"));				
			}
			
			protected function pwrTypes_clickHandler(event:MouseEvent):void
			{
				selectedPwrType = int(this.pwrSource.selectedValue);
				this.dispatchEvent(new Event("typesSelectionChanged"));				
			}		
			
			protected function cntryGrid_changeHandler(event:ListEvent):void
			{
				selectedCntry = cntryGrid.selectedItem.id;				
				this.dispatchEvent(new Event("cntrySelectionChanged"));							
			}			
			
			protected function indiGrid_changeHandler(event:ListEvent):void
			{				
				selectedIndi = 	this.indiGrid.selectedItem.id;			
				this.dispatchEvent(new Event("indiSelectionChanged"));							
			}
			
			protected function testBtn_clickHandler(event:MouseEvent):void
			{				
				getOutputDataResult.token = base.getOutputData(this.selectedCntry, this.workingScenarioID);
			}

			protected function getOutputDataResult_resultHandler(event:ResultEvent):void
			{				
				var rez:ArrayCollection = new ArrayCollection();
				rez = ArrayCollection(this.getOutputDataResult.lastResult)
				rezGrid.dataProvider = rez;
			}

		]]>
	</fx:Script>
	
	<fx:Script>
		<![CDATA[
			/* some text/numbers formatting tasks go here */
			
			public function format_numbers(item:Object, column:DataGridColumn):String { 
				var a:Object = item[column.dataField]				
				return this.stilius2.format(a);	
			}		
			
			public function format_text(item:Object, column:DataGridColumn):String { 
				var a:Object = item[column.dataField]				
				return a.toString();	
			}
		]]>
	</fx:Script>
	
	<mx:DataGrid id="cntryGrid" change="cntryGrid_changeHandler(event)" 
				 left="0" top="0" bottom="289" right="623" height="100%" width="25%">
		<mx:columns>
			<mx:DataGridColumn headerText="id" dataField="id"/>
			<mx:DataGridColumn headerText="namen" dataField="namen"/>
		</mx:columns>
	</mx:DataGrid>
	<s:BorderContainer width="75%" height="100%">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<s:BorderContainer width="100%" height="49.5%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>		
			<mx:Spacer width="10%" height="100%"/>
			<s:BorderContainer width="40%" height="100%">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				<s:Label text="BatteryTypes" width="100%" height="10%" verticalAlign="middle" textAlign="center"/>
				<s:RadioButton label="1C" groupName="batTypes" value="1" width="100%" height="10%" 
							   click="batTypesChange_clickHandler(event)" selected="true" textAlign="center"/>
				<s:RadioButton label="1D" groupName="batTypes" value="2" width="100%" height="10%" 
							   click="batTypesChange_clickHandler(event)" textAlign="center"/>
				<s:RadioButton label="3A" groupName="batTypes" value="3" width="100%" height="10%" 
							   click="batTypesChange_clickHandler(event)" textAlign="center"/>
				<s:RadioButton label="9V" groupName="batTypes" value="4" width="100%" height="10%" 
							   click="batTypesChange_clickHandler(event)" textAlign="center"/>
				<s:RadioButton label="AA" groupName="batTypes" value="5" width="100%" height="10%" selected="false" 
							   click="batTypesChange_clickHandler(event)" textAlign="center"/>
				<s:Label text="PowerSource" width="100%" height="10%" verticalAlign="middle" textAlign="center"/>
				
				<s:RadioButton label="DPP" groupName="pwrSource" value="1" width="100%" height="10%" selected="true" click="pwrTypes_clickHandler(event)" textAlign="center"/>
				<s:RadioButton label="RCH" groupName="pwrSource" value="2" width="100%" height="10%" click="pwrTypes_clickHandler(event)" textAlign="center"/>
			</s:BorderContainer>
			<s:BorderContainer width="10%" height="100%">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<s:Button label="getSomeData()" width="100%" height="10%" verticalCenter="0" horizontalCenter="0" id="testBtn" click="testBtn_clickHandler(event)"/>
			</s:BorderContainer>
			<mx:DataGrid id="indiGrid" change="indiGrid_changeHandler(event)" 
						 height="100%" width="40%" >
				<mx:columns>
					<mx:DataGridColumn headerText="id" dataField="id"/>
					<mx:DataGridColumn headerText="Indicator" dataField="namen"/>
				</mx:columns>
			</mx:DataGrid>
		</s:BorderContainer>
		<s:BorderContainer width="100%" height="49.5%">
			<s:layout>
				<s:HorizontalLayout/>
			</s:layout>			
			<mx:DataGrid width="100%" height="100%" id="rezGrid">
				<mx:columns>
					<mx:DataGridColumn headerText="scenario" dataField="scenarioID"/>
					<mx:DataGridColumn headerText="country" dataField="cntryName"/>
					<mx:DataGridColumn headerText="indicator" dataField="indiName"/>
					<mx:DataGridColumn headerText="Y2004" dataField="Y2004" labelFunction="format_numbers"/>
					<mx:DataGridColumn headerText="Y2005" dataField="Y2005" labelFunction="format_numbers"/>
					<mx:DataGridColumn headerText="Y2006" dataField="Y2006" labelFunction="format_numbers"/>
				</mx:columns>
			</mx:DataGrid>
		</s:BorderContainer>
	</s:BorderContainer>
</s:Group>
