<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Script>
		<![CDATA[		
			/** * Hard-code the URL of file to download to user's computer. */	
			
			import mx.controls.Alert;
			//private const DOWNLOAD_URL:String = "192.168.44.200";			
			/** * Create a FileReference instance to handle the file download. */
			private var fr:FileReference;			
			/** * Define reference to the download ProgressBar component. */
			private var pb:ProgressBar;			
			/** * Define reference to the "Cancel" button which will immediately stop
			 * the current download in progress. */
			private var btn:Button;
			private var btnOK:Button;
			//private var address:String = "192.168.44.200";
			private var address:String = "213.197.173.50";
			private var fileID:int;
			
			public function init():void
			{
				// Set up the references to the progress bar and cancel button,
				// which are passed from the calling script.
				this.pb  = this.downloadProgress;
				this.pb.label = "";
				this.btn = this.cancelDownloadBtn;
				this.btnOK = this.startDownloadBtn;	
				
				fr = new FileReference();
				fr.addEventListener(Event.OPEN, openHandler);
				fr.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				fr.addEventListener(Event.COMPLETE, completeHandler);
			}
			
			/** * Begin downloading the file specified in the DOWNLOAD_URL constant.*/
			//1 - finalData; 2 - exwec summary; 3 - full del; 4 -tutorial
			private var fileNames:Array = new Array(
				"Device & Battery Demand_Final Data file.zip", 
				"Device & Battery Demand_Executive Summary.pdf", 
				"Device & Battery Demand_Executive Summary.pptx",
				"Device & Battery Demand_15 Focus Markets.pdf",
				"Device & Battery Demand_15 Focus Markets.pptx",
				"Device & Battery Demand_Top Device Brands at Retail (via Store Visits).xlsx",
				"Device & Battery Demand_Tutorial.pdf");
			public function startDownload(fileID:int):void
			{
				this.fileID = fileID;				
				var request:URLRequest = new URLRequest();				
				var fullSmry:String = this.fileNames[this.fileID - 1];				
				
				var u:String = "http://" + address
							   + "/Consulting/Duracell/testData/"
							   + fullSmry;	

				request.url = u;
				this.btnOK.enabled = false;
				fr.download(request);
			}
			
			/*** When the OPEN event has dispatched, change the progress bar's label 
			 * and enable the "Cancel" button, which allows the user to abort the 
			 * download operation.*/
			private function openHandler(event:Event):void
			{
				pb.label = "DOWNLOADING %3%%";
				btn.enabled = true;
			}
			
			/*** While the file is downloading, update the progress bar's status. */
			private function progressHandler(event:ProgressEvent):void
			{
				pb.setProgress(event.bytesLoaded, event.bytesTotal);
			}
			
			/*** Once the download has completed, change the progress bar's label one 
			 * last time and disable the "Cancel" button since the download is 
			 * already completed.	 */
			private function completeHandler(event:Event):void
			{
				pb.label = "INITIATING";
				btn.enabled = true;		
				this.btnOK.enabled = true;
				//Alert.show("Download Complete", "Info");
				this.dispatchEvent(new Event("downloadFinished", true));				
			}
			
			/*** Cancel the current file download. */
			public function cancelDownload():void
			{
				fr.cancel();
				//pb.label = "DOWNLOAD CANCELLED ";
				//btn.enabled = false;
				this.dispatchEvent(new Event("downloadFinished", true));
			}
		]]>
	</fx:Script>
	
	<mx:Panel title="Download File" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
		<mx:ProgressBar id="downloadProgress" label="" mode="manual"  width="100%"/>
		<mx:ControlBar horizontalAlign="right">
			<mx:Button id="startDownloadBtn" visible="true" enabled="false" label="OK" click=""  />
			<mx:Button id="cancelDownloadBtn" label="Cancel"     click="cancelDownload();" 
					   enabled="true" />
		</mx:ControlBar>
	</mx:Panel>

	
</s:Group>
